<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBorrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAKYAAACmAd19/zgAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABWklEQVRIS72WTU7DMBCFveEKiGOw4BZsuq3t0DRxoooFcIMKJDgQLLhGF1yhbho2CCEhEqFhJomj
        hjqoKQyVvqqJMu8582NXAEAveRgercd6lEl5a5V+zJXOXifhqozMAxgzhzg9hdns0Bfr8N6END2wY3Vn
        pSqWUsHL2QTKKAYwiY+iMsMYn9bWDRsEJ1bKJxJGA3ifRj7RbZJkgRx/1+tcZEpduVWvlf5p1X0UaHK+
        qdn+qFdei6+Qz9j4BHaBTNo3qQ0o501aiLdw6gvcHUpXU5N69VhQJ57rwB80GCw8GVArutQQH8Pz3kdB
        LSyoz504dY3nwf3BORE0RM7g+c/S4zBzQRPqDGig4OISYGkBynIYFEOxHYP0XmBaMmdQdc/1DdZmzw/F
        dgwS+w8G3CliLzJ7m7IPGpaGd6ugL/bNrnoL1u26gfXAcbAemS1UE65Df5Pf/20B8QVvrlx9AxVmyAAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAKYAAACmAd19/zgAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAACIElEQVRIS7VWy07CQBRl4y/4Hf6H/+HCtYlUFzXRxOcPsNQETIxE6M64woWJz7DRja+doghBkYdV
        uM657dSZYaDVxJscbO9z7mtqioiGYqsyM75dnZ3MVtOugCfwEALPLmTQsdlKWJkZmhoTDhYEfAGKAXRc
        2Nh8DTCyz3MTuWq6bDiJBdsIW9Of9pJ7SU8L5ZGn9uob4q8zwA/hw4fqM3pAdCgYBrRdndfeQX6/QxX/
        ho6becEbCOarmfAP6meWpVhfo9vuOZVb+6ox/Gv0KAIVaiuaDnzJngSnDxrKwr3aMl13TqhPPXZw9u5p
        xpftEp/+q//JchAyMoMIuEKU4lEUL1yaQn2VOr1mYBXS0duOacjw6uv07N+HWkEmRrl8+E6Fcx4JTpvF
        0CSg0uumaqQhJxyqQYKe/MjhG+XBEkXM++4FK6MEH/0WHTQympEJZCLLhdIZchcBsJURs9VrsPKTf0f5
        2hLt1hZVAyvgGIReGGXyEACrzwz0QNJV+1BVHAk0XlKwJ5HsQQsAoSQYSX4c4gIoJXI4TZClnkMRVyKt
        yVIZjUMDVZkNsU02xxSjJgkjiFFU5SoSjam6aAEcXhpJcGDLJPGiCRnKFF0VANZe9gKEEiB9NPPXVwV+
        bJcdDNRMhlGiyw6wX9cO1xUnVjPCM3iJr2uJ0R8ch2f8zx8cCUQ3y5UEbKOcXEJ7kUD9hNH/fPRVYMzC
        Pfnjvy2U+gaePwgmOY9v2wAAAABJRU5ErkJggg==
</value>
  </data>
</root>