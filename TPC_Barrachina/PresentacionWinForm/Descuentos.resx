<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBorrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        pgAAAKYB3X3/OAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFaSURBVEhLvZZN
        TsMwEIW94QqIY7DgFmy6re3QNHGiigVwgwokOBAsuEYXXKFuGjYIISESoWEmiaOGOqgpDJW+qoky7znz
        Y1cAQC95GB6tx3qUSXlrlX7Mlc5eJ+GqjMwDGDOHOD2F2ezQF+vw3oQ0PbBjdWelKpZSwcvZBMooBjCJ
        j6Iywxif1tYNGwQnVsonEkYDeJ9GPtFtkmSBHH/X61xkSl25Va+V/mnVfRRocr6p2f6oV16Lr5DP2PgE
        doFM2jepDSjnTVqIt3DqC9wdSldTk3r1WFAnnuvAHzQYLDwZUCu61BAfw/PeR0EtLKjPnTh1jefB/cE5
        ETREzuD5z9LjMHNBE+oMaKDg4hJgaQHKchgUQ7Edg/ReYFoyZ1B1z/UN1mbPD8V2DBL7DwbcKWIvMnub
        sg8aloZ3q6Av9s2uegvW7bqB9cBxsB6ZLVQTrkN/k9//bQHxBW+uXH0DFWbIAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        pgAAAKYB3X3/OAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAIgSURBVEhLtVbL
        TsJAFGXjL/gd/of/4cK1iVQXNdHE5w+w1ARMjETozrjChYnPsNGNr52iCEGRh1W4zrnt1JlhoNXEmxxs
        73Pua2qKiIZiqzIzvl2dncxW066AJ/AQAs8uZNCx2UpYmRmaGhMOFgR8AYoBdFzY2HwNMLLPcxO5arps
        OIkF2whb05/2kntJTwvlkaf26hvirzPAD+HDh+ozekB0KBgGtF2d195Bfr9DFf+Gjpt5wRsI5quZ8A/q
        Z5alWF+j2+45lVv7qjH8a/QoAhVqK5oOfMmeBKcPGsrCvdoyXXdOqE89dnD27mnGl+0Sn/6r/8lyEDIy
        gwi4QpTiURQvXJpCfZU6vWZgFdLR245pyPDq6/Ts34daQSZGuXz4ToVzHglOm8XQJKDS66ZqpCEnHKpB
        gp78yOEb5cESRcz77gUrowQf/RYdNDKakQlkIsuF0hlyFwGwlRGz1Wuw8pN/R/naEu3WFlUDK+AYhF4Y
        ZfIQAKvPDPRA0lX7UFUcCTReUrAnkexBCwChJBhJfhziAiglcjhNkKWeQxFXIq3JUhmNQwNVmQ2xTTbH
        FKMmCSOIUVTlKhKNqbpoARxeGklwYMsk8aIJGcoUXRUA1l72AoQSIH0089dXBX5slx0M1EyGUaLLDrBf
        1w7XFSdWM8IzeImva4nRHxyHZ/zPHxwJRDfLlQRso5xcQnuRQP2E0f989FVgzMI9+eO/LZT6Bp4/CCY5
        j2/bAAAAAElFTkSuQmCC
</value>
  </data>
</root>